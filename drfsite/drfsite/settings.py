"""
Django settings for drfsite project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o*mrws1+r)1l9vtou^w^tgfhnh8b-6)=ju0f2x_a^ccqvy8t+u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# ---06.12.2023---
# Lesson 2
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Подключаем приложение women
    'women.apps.WomenConfig',
    # Подключаем Django REST Framework
    'rest_framework',

    # ---25.12.2023---
    # Lesson 12
    # Для реализации авторизации по токенам подключаем стандартную таблицу DRF и библиотеку Djoser
    'rest_framework.authtoken',
    'djoser',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'drfsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'drfsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# ---06.12.2023---
# Lesson 2
# В учебных целях оставляется СУБД sqlite3
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

# ---06.12.2023---
# Lesson 2
# Меняем язык сайта
# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'ru'

# Меняем временную зону на московское время
# TIME_ZONE = 'UTC'
TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ---21.12.2023---
# Lesson 7
# В DRF можно отключить формирование браузерной формы для выполнения HTTP-запросов
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        # Данные между конечным пользователем и сайтом передаются в JSON-формате
        'rest_framework.renderers.JSONRenderer',
        # Подключение/отключение API браузера
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],

    # ---23.12.2023---
    # Lesson 10
    # Можно указывать глобальные настройки для ограничения доступа
    'DEFAULT_PERMISSION_CLASSES': [
        # Доступ к данным в этом случае будет предоставлен только авторизованным пользователям
        # НО permission_classes, заданные в классах представлений, переопределяют глобальные настройки
        # 'rest_framework.permissions.IsAuthenticated',
        # По умолчанию в DRF задан параметр, определяющий доступ для всех
        'rest_framework.permissions.AllowAny',
    ],

    # ---25.12.2023---
    # Lesson 12
    # Разрешим аутентификацию по токенам (а также по сессиям (поведение DRF по умолчанию))
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # ---27.12.2023---
        # Lesson 14
        # Разрешаем аутентификацию через JWT-токены средствами пакета Simple JWT (совместим с Djoser)
        # 'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ]
}

# ---27.12.2023---
# Lesson 14
# Прописываем словарь настроек библиотеки Simple JWT
SIMPLE_JWT = {
    # Время жизни access-токена
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
    # Время жизни refresh-токена
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": False,

    # Алгоритм шифрования для формирования подписи
    "ALGORITHM": "HS256",
    # Используемый для этого секретный ключ
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    # Заголовок перед токеном в заголовке запроса (можно менять)
    # "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_TYPES": ("JWT",),
    # Поле, в котором будет передаваться токен
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    # В JWT-токене будет сохраняться информация об идентификаторе пользователя в виде ключа user_id
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    # Параметры для sliding-токенов
    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),

    "TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainPairSerializer",
    "TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSerializer",
    "TOKEN_VERIFY_SERIALIZER": "rest_framework_simplejwt.serializers.TokenVerifySerializer",
    "TOKEN_BLACKLIST_SERIALIZER": "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
    "SLIDING_TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainSlidingSerializer",
    "SLIDING_TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSlidingSerializer",
}
